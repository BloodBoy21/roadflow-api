[project]
name = "roadflow-api"
version = "0.1.0"
description = "A FastAPI-based backend system for managing organizations, users, and workflow automation with AI agents"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.12",
    "uvicorn>=0.34.3",
    "prisma>=0.15.0",
    "pymongo>=4.13.0",
    "redis>=6.2.0",
    "celery>=5.5.3",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "bcrypt>=4.3.0",
    "pyjwt>=2.10.1",
    "loguru>=0.7.3",
    "google-genai>=1.19.0",
    "google-adk>=1.2.1",
]

[tool.ruff]
line-length = 88
target-version = "py312"
# Show all violations as errors (not warnings)
output-format = "full"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "I",   # isort
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by formatter
]

# All selected rules are treated as errors by default in ruff
# Use --exit-non-zero-on-fix to ensure CI fails on unfixable issues

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint.isort]
known-first-party = ["models", "repository", "services", "utils", "routes", "helpers", "middleware"]

[tool.uv]
dev-dependencies = [
    "ruff>=0.11.13",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.28.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

